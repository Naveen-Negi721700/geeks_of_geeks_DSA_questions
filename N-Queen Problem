class Solution {
  public:
  bool issafe(vector<int>&board,int row, int col)
  {
      for(int i=0;i<row;i++)
      {
         if(board[i]==col || abs(board[i]-col)==abs(i-row))
         {
             return false;
         }
      }
      return true;

      
  }
   void helper(vector<int>&board,int row ,int n , vector<vector<int>>&ans)
  {
      if(row==n)
      {
          vector<int>temp=board;
          for(int &x:temp)
          {
              x=x+1;
          }
          ans.push_back(temp);
          return ;
      }
      for(int j=0;j<n;j++)
      {
          if(issafe(board,row,j))
          {
              board[row]=j;
              helper(board,row+1,n,ans);
              board[row]=-1;
          }
      }
  }
    vector<vector<int>> nQueen(int n) {
    vector<int>board(n,-1);
        vector<vector<int>>ans;
        helper( board,0,n,ans);
        return ans;
        
    }
};
