class Solution {
  public:
    int maxWater(vector<int> &arr) {
        // code here
        int n=arr.size();
        vector<int>leftmax(n,0);
        vector<int>rightmax(n,0);
        leftmax[0]=arr[0];
        rightmax[n-1]=arr[n-1];
        for(int i=1;i<n;i++)
        {
            leftmax[i]=max(leftmax[i-1],arr[i]);
        }
        for(int i=n-2;i>=0;i--)
        {
            rightmax[i]=max(rightmax[i+1],arr[i]);
        }
        int ans=0;
        for(int i=0;i<n;i++)
        {
            ans=ans+min(leftmax[i],rightmax[i])-arr[i];
        }
        return ans;
    }
};


//another approche
class Solution {
  public:
    int maxWater(vector<int> &arr) {
        // code here
        int n=arr.size();
        int l=0;
        int r=n-1;
        int lmax=0;
        int rmax=0;
        int ans=0;
        while(l<r)
        {
            lmax=max(lmax,arr[l]);
            rmax=max(rmax,arr[r]);
            if(lmax<rmax)
            {
                ans=ans+lmax-arr[l];
                l++;
            }else{
                ans=ans+rmax-arr[r];
                r--;
            }
        }
        return ans;
    }
};
