class Solution {
  public:
    int longestSubarray(vector<int>& arr, int k) {
        // code here
        int n=arr.size();
        vector<int>num(n,0);
        num[0]=arr[0];
        for(int i=1;i<n;i++)
        {
            num[i]=num[i-1]+arr[i];
        }
        unordered_map<int,int>m;
        int count=0;
        int longest=0;
        for(int j=0;j<n;j++)
        {
            if(num[j]==k)
            {
                longest=max(longest,j+1);
            }
            int val=num[j]-k;
            if(m.find(val)!=m.end())
            {
                longest=max(longest,j-m[val]);
            }
            if(m.find(num[j])==m.end())
            {
                m[num[j]]=j;
            }
        
            
        }
        return longest;
    }
};
