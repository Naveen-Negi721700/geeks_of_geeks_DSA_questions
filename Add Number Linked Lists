/*
class Node {
  public:
    int data;
    Node* next;
    Node(int x) {
        data = x;
        next = NULL;
    }
};
*/

class Solution {
  public:
  Node*reverse(Node*head)
  {
      Node*prev=NULL;
      Node*nex=NULL;
      Node*curr=head;
      while(curr!=NULL)
      {
          nex=curr->next;
          curr->next=prev;
          prev=curr;
          curr=nex;
      }
      return prev;
  }
    Node* addTwoLists(Node* head1, Node* head2) {
        // code here
        head1=reverse(head1);
        head2=reverse(head2);
        Node* result=NULL;
        int carry=0;
        while(head1 || head2 || carry)
        {
            int sum=carry;
            if(head1)
            {
                sum+=head1->data;
                head1=head1->next;
            }
            if(head2)
            {
                sum+=head2->data;
                head2=head2->next;
            }
            carry=sum/10;
            Node*newnode=new Node(sum%10);
            newnode->next=result;
            result=newnode;
        }
        while(result && result->data==0 && result->next)
        {
            Node*temp=result;
            result=result->next;
            delete temp;
        }
        return result;
    }
};
